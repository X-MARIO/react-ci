# .github/workflows/reusable-snyk-scan.yml
name: Reusable Snyk Scan

on:
  workflow_call:
    secrets:
      # Ожидаем SNYK_TOKEN от родительского воркфлоу (ci.yml)
      SNYK_TOKEN:
        required: true

jobs:
  snyk-scan:
    name: Snyk Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies-npm

      # Этот шаг устанавливает и аутентифицирует Snyk CLI
      - name: Setup Snyk
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # ИСПРАВЛЕНО: Используем 'run:' для вызова Snyk CLI
      - name: Run Snyk Open Source Scan
        run: snyk test --all-projects --sarif-file-output=snyk-test.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true # Рекомендуется, чтобы сборка не падала из-за уязвимостей

      # ИСПРАВЛЕНО: Используем 'run:' для вызова Snyk CLI
      - name: Run Snyk Code Scan
        run: snyk code test --sarif-file-output=snyk-code.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true # Рекомендуется

      # ИСПРАВЛЕНО: Загружаем оба SARIF файла по отдельности
      - name: Upload Snyk Open Source results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-test.sarif

      - name: Upload Snyk Code results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
